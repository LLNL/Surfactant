name: Python Test Plugins

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]
    permissions:
      contents: read

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Enable Debug Logging
      - name: Enable Debug Logging
        run: echo "Enabling debug logging..."
        env:
          ACTIONS_STEP_DEBUG: true

      # Step 4: Test Plugins
      - name: Test Plugins
        env:
          PYTHONUNBUFFERED: 1  # Ensure immediate output from Python scripts
        run: |
          echo "Starting plugin tests..."

          # Define the plugins directory and ignored directories
          PLUGINS_DIR="Surfactant/plugins"
          IGNORED_DIRS=("") # Add any ignored plugin directories here

          # Iterate through each subdirectory in the plugins folder
          for PLUGIN_DIR in "$PLUGINS_DIR"/*; do
            # Skip if it's not a directory
            [ -d "$PLUGIN_DIR" ] || continue

            # Get the plugin name
            PLUGIN_NAME=$(basename "$PLUGIN_DIR")
            echo "Processing plugin: $PLUGIN_NAME"

            # Skip ignored directories
            if [[ " ${IGNORED_DIRS[@]} " =~ " ${PLUGIN_NAME} " ]]; then
              echo "Skipping ignored plugin: $PLUGIN_NAME"
              continue
            fi

            echo "Testing plugin: $PLUGIN_NAME"

            # Create a fresh virtual environment
            echo "Creating virtual environment for $PLUGIN_NAME..."
            python -m venv venv
            source venv/bin/activate

            # Install Surfactant and the plugin
            echo "Installing Surfactant and $PLUGIN_NAME..."
            pip install --upgrade pip
            pip install -e ./Surfactant
            pip install -e "$PLUGIN_DIR"

            # Check if tests exist in the plugin folder
            if [ -d "$PLUGIN_DIR/tests" ]; then
              echo "Tests found for $PLUGIN_NAME. Running pytest."

              # Run pytest in the plugin's folder with verbose output
              pytest -v "$PLUGIN_DIR/tests"

              # Deactivate the virtual environment
              echo "Deactivating virtual environment for $PLUGIN_NAME..."
              deactivate
            else
              echo "No tests found for $PLUGIN_NAME. Running basic functionality check."

              # Run the plugin on test files (adjust the command as needed)
              if [ -d "$PLUGIN_DIR/test_files" ]; then
                for TEST_FILE in "$PLUGIN_DIR/test_files"/*; do
                  echo "Running $PLUGIN_NAME on $TEST_FILE"
                  # Replace `plugin-command` with the actual command to invoke the plugin
                  plugin-command "$TEST_FILE"
                done
              else
                echo "No test files found for $PLUGIN_NAME. Skipping functionality check."
              fi

              # Deactivate the virtual environment
              echo "Deactivating virtual environment for $PLUGIN_NAME..."
              deactivate
            fi
          done
